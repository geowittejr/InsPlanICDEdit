<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>

  <configSections>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
  </configSections>  
  
  <connectionStrings>
    <add name="SqlDbConnectionString" connectionString="Server=serverName;Database=dbName;User Id=user;Password=pwd;Application Name=InsPlanIcdEditAPI;Connection Timeout=10;" />
  </connectionStrings>

  <appSettings>
    <!-- PopulateIcd9CodesTableIntervalMinutes - interval in minutes between calls to populate the ICD9 codes table -->
    <add key="PopulateIcd9CodesTableIntervalMinutes" value="240" />

    <!-- PopulateInsPlansTableIntervalMinutes - interval in minutes between calls to populate the InsPlans table -->
    <add key="PopulateInsPlansTableIntervalMinutes" value="240" />
  </appSettings>  
  
  
  <!-- 
  ========================
  NLog Section Begin
  ========================    
  -->
  <!--
  Nlog Section
    autoreload: Reloads configuration upon change to this file.
    throwExceptions: Set to "false" for production applications. If "false", NLog will silently eat any exceptions. Set to "true" to see details of exceptions while debugging.
  -->
  <nlog autoReload="true" throwExceptions="true">
    <!--
    Targets Section            
    The targets section defines log targets. Each target is defined by a "target" element that requires the two attributes below:    
      name: name of the target.
      type: target type, such as "File", "Database", and "Mail".      
    The outer parent "targets" element can specify the following attribute:    
      async: Set to "true" and all targets within the parent element will process asynchronously.    
    -->
    <targets async="true">
      <!-- 
      File target
        concurrentWrites: Multiple processes on the same host can write. Set to "false" to improve performance. Ignored if keepFileOpen = "false".
        keepFileOpen: Set to "true" to improve performance. Log files are not closed between every write.
        archiveAboveSize: Defines the number of bytes at which a log file will be archived.
        archiveNumbering: If set to "Sequence", the most recent log file archive will have the highest number.
        maxArchiveFiles: The maximum number of archived log files that should be kept. Default value is 9.
      -->
      <target name="TextFileTarget" type="File" fileName="D:\InsPlanIcdEditApi.log" layout="${longdate} ${level} [${threadid}]: ${message}" archiveAboveSize="10000000" archiveNumbering="Sequence" maxArchiveFiles="10" keepFileOpen="false" concurrentWrites="false" />

      <!-- 
      Mail target
        to: To email addresses separated by semi-colons.
        cc: Bcc email addresses separated by semi-colons.
        bcc: Cc email addresses separated by semi-colons.
      -->
      <target name="SmtpMailTarget" type="Mail" html="true" header="Please review the following log event(s):${newline}${newline}" footer="${newline}Thank you." body="${longdate} ${level} [${threadid}]: ${message}${newline}${newline}" subject="${logger} ${level} Log Event(s)" to="user@email.com" bcc="" from="user@email.com" smtpServer="smtp.com" />
      <!-- 
      Database target
      -->
      <target name="DatabaseTarget" type="Database" commandText="INSERT INTO dbo.ExceptionLog ([AppName],[UserIp],[UserId],[Message],[StackTrace],[DateOccurred],[Method],[Params],[AlertType])            VALUES (@AppName, @UserIp, @UserId, @Message, @StackTrace, getdate(), @MethodName, @MethodParams,            CASE WHEN @Level = 'FATAL' OR @Level = 'ERROR' THEN 3 WHEN @Level = 'WARN' THEN 2 ELSE 1 END)" connectionString="data source=errorsDB;initial catalog=errorsDB;integrated security=false;persist security info=True;User ID=user;Password=pwd;">
        <parameter name="@AppName" layout="InsPlanIcdEditApi" />
        <parameter name="@UserIp" layout="" />
        <parameter name="@UserId" layout="0" />
        <parameter name="@Message" layout="${message}" />
        <parameter name="@StackTrace" layout="" />
        <parameter name="@MethodName" layout="" />
        <parameter name="@MethodParams" layout="" />
        <parameter name="@Level" layout="${level}" />
      </target>
    </targets>
    <!--
    Rules Section    
    Log routing rules are defined in the "rules" section below.  Rules are processed in the order that they appear in the list.
    If a rule matches, log messages are directed to target(s) in that rule.  If a rule is marked as final, rules below it are not processed.    
    The logging levels in order are "TRACE", "DEBUG", "INFO", "WARN", "ERROR", "FATAL".    
      name: name of the source logger (wildcard * matches all loggers).
      minlevel: minimum log level for this rule to match.
      maxlevel: maximum log level for this rule to match.
      level: single log level for this rule to match.
      levels: comma-separated list of log levels for this rule to match.
      writeTo: comma-separated list of targets that should be written to when this rule matches.
      final: make this rule final. No rules below a matching final rule will be processed.       
    -->
    <rules>
      <logger name="*" minLevel="Debug" writeTo="TextFileTarget" />
      <!--<logger name="*" minLevel="Error" writeTo="SmtpMailTarget" />-->
      <!--<logger name="*" minLevel="Error" writeTo="DatabaseTarget" />-->
    </rules>

  </nlog>
  <!-- 
  ========================
  NLog Section End
  ========================
  -->

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
    <httpRuntime />
  </system.web>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <!--
  ***************************************************************************************************************************
    404 ERRORS ON IIS6

    When trying to run this Web API site on IIS 6, I kept getting 404 errors.
    I solved my issue with the workaround described here for inserting a wildcard application mapping to aspnet_isapi_dll.
    Here are the steps to add a wildcard application map to the .NET isapi dll:
	    1. On the Web API IIS site, click on the "Configuration" button on the directory tab.
	    2. When the dialog opens, click the "Insert" button.
	    3. Enter the executable path as the isapi_dll path, "c:\windows\microsoft.net\framework\v4.0.30319\aspnet_isapi.dll".
	    4. Make sure that you uncheck the "Verify that file exists" box.
	    5. Click "OK".
    http://haacked.com/archive/2008/11/26/asp.net-mvc-on-iis-6-walkthrough.aspx  
    
  ***************************************************************************************************************************    
  -->  
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>
</configuration>